{ "name": "ClickableMixin",
  "memberOf": "$w",
  "mixes": [],
  "labels":
  [ "changed" ],
  "location":
  { "filename": "ClickableMixin.es6" },
  "docs":
  { "description":
  [ "Provides functionality for elements that can be be clicked." ],
    "links": [],
    "examples": [] } ,
  "properties": [],
  "operations":
  [ { "name": "onClick",
    "labels":
    [ "changed" ],
    "nameParams": [],
    "params":
    [ { "name": "handler",
      "type": "$w.MouseEventHandler",
      "doc": "The name of the function or\n the function expression to run when the element is clicked." } ],
    "ret":
    { "type": "$w.Element",
      "doc": "The element to which the event handler was added." },
    "locations":
    [ { "filename": "ClickableMixin.es6" } ],
    "docs":
    { "summary": "Adds an event handler that runs when the element is clicked.",
      "description":
      [ "An element receives a `click` event when a user clicks on the element",
        " and releases.",
        "",
        " When a user double-clicks an element, two `click` events are fired",
        " before a `doubleClick` event is also fired." ],
      "links":
      [ "[onDblClick( )](#onDblClick)" ],
      "examples":
      [ { "title": "Get the ID of the element that was clicked",
        "body":
        [ "$w(\"#myElement\").onClick( (event, $w) => {",
          "  let targetId = event.target.id;  // \"myElement\"",
          "} );" ] },
        { "title": "Get the coordinates of a mouse click",
          "body":
          [ "$w(\"#myElement\").onClick( (event, $w) => {",
            "  let clientX = event.clientX;  // 362",
            "  let clientY = event.clientY;  // 244",
            "  let offsetX = event.offsetX;  // 10",
            "  let offsetY = event.offsetY;  // 12",
            "  let pageX = event.pageX;      // 362",
            "  let pageY = event.pageY;      // 376",
            "  let screenX = event.screenX;  // 3897",
            "  let screenY = event.screenY;  // 362",
            "} );" ] } ] },
    "extra":
    { "notes":
      [ "**Deprecation note:** The $w parameter of event handlers is being deprecated. To\n get a scoped selector, use the $w.at() function and pass it the context property\n of the event parameter: $item = $w.at(event.context). To learn more, see\n <a href=\"https://www.wix.com/code/home/forum/wix-tips-and-updates/removal-of-the-w-parameter-from-event-handlers\" target=\"_blank\">here</a>." ],
      "eventType": "onClick"}
    },
    { "name": "onDblClick",
      "labels":
      [ "changed" ],
      "nameParams": [],
      "params":
      [ { "name": "handler",
        "type": "$w.MouseEventHandler",
        "doc": "The name of the function or\n the function expression to run when the element is clicked." } ],
      "ret":
      { "type": "$w.Element",
        "doc": "The element to which the event handler was added." },
      "locations":
      [ { "filename": "ClickableMixin.es6" } ],
      "docs":
      { "summary": "Adds an event handler that runs when the element is double-clicked.",
        "description":
        [ "An element receives a `dblClick` event when a user double-clicks on the element",
          " and releases.",
          "",
          " When a user double-clicks an element, two `click` events are fired",
          " before a `doubleClick` event is also fired." ],
        "links":
        [ "[onClick( )](#onClick)" ],
        "examples":
        [ { "title": "Get the ID of the element that was double-clicked",
          "body":
          [ "$w(\"#myElement\").onClick( (event, $w) => {",
            "  let targetId = event.target.id;  // \"myElement\"",
            "} );" ] } ] },
      "extra":
      { "notes":
      [ "**Deprecation note:** The $w parameter of event handlers is being deprecated. To\n get a scoped selector, use the $w.at() function and pass it the context property\n of the event parameter: $item = $w.at(event.context). To learn more, see\n <a href=\"https://www.wix.com/code/home/forum/wix-tips-and-updates/removal-of-the-w-parameter-from-event-handlers\" target=\"_blank\">here</a>." ],"eventType": "onDblClick" } } ],
  "callbacks": [],
  "messages": [],
  "extra":
  {  } }
