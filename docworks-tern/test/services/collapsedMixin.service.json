{ "name": "CollapsedMixin",
  "memberOf": "$w",
  "mixes": [],
  "labels":
  [ "new" ],
    "location":
  { "filename": "CollapsedMixin.es6" },
  "docs":
  { "summary": "Provides functionality for elements that can be collapsed.\n\n To learn about the behavior of a collapsed element,\n see the [`collapsed`](#collapsed) property.",
    "links": [],
    "examples": [] },
  "properties":
  [ { "name": "collapsed",
    "labels": [],
    "get": true,
    "set": false,
    "type": "boolean",
    "locations":
      [ { "filename": "CollapsedMixin.es6" } ],
    "docs":
      { "summary": "Indicates if the element is collapsed or expanded.",
        "description":
          [ "If `collapsed` is `true`, the element is not displayed on the page under",
            " any circumstances. A collapsed element, unlike a",
            " [`hidden`]($w.HiddenMixin.html#hide) element, does not take up any",
            " space on the page. When collapsed, elements positioned within 70 pixels",
            " below the collapsed element and each other will move up to take the",
            " collapsed element's place where possible. The elements that move up",
            " maintain their positions relative to one another.",
            "",
            " If `collapsed` is `false`, the element _may_ be displayed on the page.",
            " Elements that moved up to take the collapsed element's place on the",
            " page are moved back down.",
            "",
            " However, an expanded element (an element whose `collapsed` property is",
            " `false`) will still not be displayed if:",
            "",
            " + It is [hidden]($w.HiddenMixin.html#hidden).",
            " + Its [parent element]($w.Node.html#parent) is hidden or collapsed.",
            " + It is a slide in a [Slideshow]($w.Slideshow.html) which is",
            "   currently not being displayed.",
            "",
            "",
            " Even if the element will not be displayed due to the conditions",
            " mentioned above, if its `collapsed` property is `false`, it will",
            " be displayed when the conditions no longer apply.",
            "",
            " To set the `collapsed` property on an element, use the element's",
            " [`collapse()`](#collapse) and [`expand()`](#expand) functions.",
            "",
            " If you select **Collapsed on load** in the element's Properties panel",
            " in the Editor, the `collapsed` property is set to `true` when the page loads." ],
        "links":
          [ "[collapse( )](#collapse-)",
            "[expand( )](#expand-)",
            "{@link $w.HiddenMixin.hide|hide( )}",
            "{@link $w.HiddenMixin.show|show( )}",
            "{@link $w.HiddenMixin.hidden|hidden}" ],
        "examples":
          [ { "title": "Get the collapsed status of an element",
            "body":
              [ "let isCollapsed = $w(\"#myElement\").collapsed; // false" ] },
            { "title": "Toggle the collapsed state of an element",
              "body":
                [ "if( $w(\"#myElement\").collapsed ) {",
                  "  $w(\"#myElement\").expand();",
                  "}",
                  "else {",
                  "  $w(\"#myElement\").collapse();",
                  "}" ] } ] } } ],
    "operations":
  [ { "name": "collapse",
    "labels": [],
    "nameParams": [],
    "params": [],
    "ret":
      { "type":
        { "name": "Promise",
          "typeParams":
            [ "void" ] },
        "doc": "undefined. on fulfilled - When the element's `collapsed` property has been set to `true`." },
    "locations":
      [ { "filename": "CollapsedMixin.es6" } ],
    "docs":
      { "summary": "Collapses the element and sets its `collapsed` property to `true`.",
        "description":
          [ "The `collapse()` function returns a Promise that is resolved when the",
            " element's [`collapsed`](#collapsed) property has been set to `true`.",
            "",
            " To learn about the behavior of a collapsed element,",
            " see the [`collapsed`](#collapsed) property.",
            "",
            " You can also collapse an element",
            " when the page loads by using the Properties panel in the Editor." ],
        "links":
          [ "[expand( )](#expand)",
            "[collapsed](#collapsed)",
            "{@link $w.HiddenMixin.hide|hide( )}" ],
        "examples":
          [ { "title": "Collapse an element",
            "body":
              [ "$w(\"#myElement\").collapse();" ] },
            { "title": "Collapse an element and log a message when done",
              "body":
                [ "$w(\"#myElement\").collapse()",
                  "  .then( () => {",
                  "    console.log(\"Done with collapse\");",
                  "  } );" ] },
            { "title": "Toggle the collapsed state of an element",
              "body":
                [ "if( $w(\"#myElement\").collapsed ) {",
                  "  $w(\"#myElement\").expand();",
                  "}",
                  "else {",
                  "  $w(\"#myElement\").collapse();",
                  "}" ] } ] } },
    { "name": "expand",
      "labels": [],
      "nameParams": [],
      "params": [],
      "ret":
        { "type":
          { "name": "Promise",
            "typeParams":
              [ "void" ] },
          "doc": "undefined. on fulfilled - When the element's `collapsed` property has been set to `false`." },
      "locations":
        [ { "filename": "CollapsedMixin.es6" } ],
      "docs":
        { "summary": "Expands the element and sets its `collapsed` property to `false`.",
          "description":
            [ "The `expand()` function returns a Promise that is resolved when the",
              " element's [`collapsed`](#collapsed) property has been set to `false`.",
              "",
              " To learn about the behavior of an expanded element,",
              " see the [`collapsed`](#collapsed) property." ],
          "links":
            [ "[expand( )](#expand)",
              "[collapsed](#collapsed)",
              "{@link $w.HiddenMixin.show|show( )}" ],
          "examples":
            [ { "title": "Expand an element",
              "body":
                [ "$w(\"#myElement\").expand();" ] },
              { "title": "Expand an element and log a message when done",
                "body":
                  [ "$w(\"#myElement\").expand()",
                    "  .then( () => {",
                    "    console.log(\"Done with expand\");",
                    "  } );" ] },
              { "title": "Toggle the collapsed state of an element",
                "body":
                  [ "if( $w(\"#myElement\").collapsed ) {",
                    "  $w(\"#myElement\").expand();",
                    "}",
                    "else {",
                    "  $w(\"#myElement\").collapse();",
                    "}" ] } ] } } ],
    "callbacks": [],
  "messages": [] }
