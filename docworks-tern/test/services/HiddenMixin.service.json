{ "name": "HiddenMixin",
  "memberOf": "$w",
  "mixes": [],
  "labels":
  [ "new" ],
  "location":
  { "filename": "HiddenMixin.es6" },
  "docs":
  { "summary": "Provides functionality for elements that can be hidden.\n\n To learn about the behavior of a hidden element,\n see the [`hidden`](#hidden) property.",
    "links": [],
    "examples": [] },
  "properties":
  [ { "name": "hidden",
    "labels": [],
    "get": true,
    "set": false,
    "type": "boolean",
    "locations":
    [ { "filename": "HiddenMixin.es6" } ],
    "docs":
    { "summary": "Indicates if the element is visible or hidden.",
      "description":
      [ "If `hidden` is `true`, the element is not displayed on the page under",
        " any circumstances. A hidden element, unlike a",
        " [`collapsed`]($w.CollapsedMixin.html#collapsed) element, continues to",
        " take up the same space on the page as it did when it was visible.",
        "",
        " If `hidden` is `false`, the element _may_ be displayed on the page.",
        "",
        " However, an element whose `hidden` property is `false` will still not",
        " be displayed if:",
        "",
        " + It is [collapsed]($w.CollapsedMixin.html#collapsed).",
        " + Its [parent element]($w.Node.html#parent) is hidden or collapsed.",
        " + It is a slide in a [Slideshow]($w.Slideshow.html) which is",
        "   currently not being displayed.",
        "",
        "",
        " Even if the element will not be displayed due to the conditions",
        " mentioned above, if its `hidden` property is set to `false`, it will",
        " be displayed when the conditions no longer apply.",
        "",
        " To determine if the element is actually visible, use the",
        " [`isVisible`](#isVisible) property.",
        "",
        " To set the `hidden` property on an element, use the element's",
        " [`hide()`](#hide) or [`show()`](#show) functions.",
        "",
        " If you select **Hidden on load** in the element's Properties panel",
        " in the Editor, the `hidden` property is set to `true` when the page loads." ],
      "links":
      [ "[hide( )](#hide)",
        "[show( )](#show)",
        "{@link $w.CollapsedMixin.collapse|collapse( )}",
        "{@link $w.CollapsedMixin.expand|expand( )}",
        "{@link $w.CollapsedMixin.collapsed|collapsed}",
        "[rendered]($w.Element#rendered)" ],
      "examples":
      [ { "title": "Get the hidden status of an element",
        "body":
        [ "let isHidden = $w(\"#myElement\").hidden;  // false" ] },
        { "title": "Toggle the hidden state of an element",
          "body":
          [ "if( $w(\"#myElement\").hidden ) {",
            "  $w(\"#myElement\").show();",
            "}",
            "else {",
            "  $w(\"#myElement\").hide();",
            "}" ] } ] } },
    { "name": "isVisible",
      "labels": [],
      "get": true,
      "set": false,
      "type": "boolean",
      "locations":
      [ { "filename": "HiddenMixin.es6" } ],
      "docs":
      { "summary": "Indicates if the element is actually visible.",
        "description":
        [ "If `isVisible` is `true`, the element is displayed on the page.",
          "",
          " If `isVisible` is `false`, the element is not displayed on the page.",
          "",
          " The value of the `isVisible` property is calculated based on the",
          " [`hidden`](#hidden), [`collapsed`](#collapsed), and [`rendered`]($w.Element#rendered)",
          " properties of the element and all of its ancestors. It will be `true`",
          " only if the conditions exist in the element's property values and the",
          " property values of its ancestors such that the element is actually",
          " displayed on the page." ],
        "links":
        [ "[hidden](#hidden)",
          "[collapsed]($w.CollapsedMixin.html#collapsed)",
          "[rendered]($w.Element.html#rendered)" ],
        "examples":
        [ { "title": "Get whether an element is visible",
          "body":
          [ "let isVisible = $w(\"#myElement\").isVisible;  // true" ] } ] } } ],
  "operations":
  [ { "name": "hide",
    "labels": [],
    "nameParams": [],
    "params":
    [ { "name": "animationName",
      "type": "string",
      "doc": "The name of the\n animation to play when hiding the item.",
      "optional": true } ],
    "ret":
    { "type":
    { "name": "Promise",
      "typeParams":
      [ "void" ] },
      "doc": "undefined. on fulfilled - When the animation is complete and the element's `hidden` property has been set to `true`." },
    "locations":
    [ { "filename": "HiddenMixin.es6" } ],
    "docs":
    { "summary": "Hides the element and sets its `hidden` property\n to `true`, using an animation if specified.",
      "description":
      [ "The `hide()` function returns a Promise that is resolved when the",
        " animation is complete and the element's [`hidden`](#hidden) property",
        " has been set to `true`.",
        "",
        " To learn about the behavior of a hidden element,",
        " see the [`hidden`](#hidden) property.",
        "",
        " You can optionally apply one of the following animations when hiding the element:",
        "",
        " + `\"ArcOut\"`",
        " + `\"BounceOut\"`",
        " + `\"CollapseOut\"`",
        " + `\"Conceal\"`",
        " + `\"FadeOut\"`",
        " + `\"FlipOut\"`",
        " + `\"FloatOut\"`",
        " + `\"FlyOut\"`",
        " + `\"FoldOut\"`",
        " + `\"GlideOut\"`",
        " + `\"PopOut\"`",
        " + `\"SlideOut\"`",
        " + `\"SpinOut\"`",
        " + `\"TurnOut\"`",
        "",
        "",
        "",
        " You can also hide an element",
        " when the page loads by using the Properties panel in the Editor." ],
      "links":
      [ "[show( )](#show)",
        "[hidden](#hidden)",
        "[collapse( )]($w.CollapsedMixin.html#collapse)" ],
      "examples":
      [ { "title": "Hide an element with no animation",
        "body":
        [ "$w(\"#myElement\").hide();" ] },
        { "title": "Hide an element with the \"FadeOut\" animation",
          "body":
          [ "$w(\"#myElement\").hide(\"FadeOut\");" ] },
        { "title": "Hide an element with an animation and log message when the animation is done",
          "body":
          [ "$w(\"#myElement\").hide(\"FadeOut\")",
            "  .then( ( ) => {",
            "    console.log(\"Done with fade\");",
            "} );" ] },
        { "title": "Toggle the hidden state of an element",
          "body":
          [ "if( $w(\"#myElement\").hidden ) {",
            "  $w(\"#myElement\").show();",
            "}",
            "else {",
            "  $w(\"#myElement\").hide();",
            "}" ] } ] } },
    { "name": "show",
      "labels": [],
      "nameParams": [],
      "params":
      [ { "name": "animationName",
        "type": "string",
        "doc": "The name of the animation to\n trigger when showing the item.",
        "optional": true } ],
      "ret":
      { "type":
      { "name": "Promise",
        "typeParams":
        [ "void" ] },
        "doc": "undefined. on fulfilled - When the animation is complete and the element's `hidden` property has been set to `false`." },
      "locations":
      [ { "filename": "HiddenMixin.es6" } ],
      "docs":
      { "summary": "Shows the element and sets its `hidden` property\n to `false`, using an animation if specified.",
        "description":
        [ "The `show()` function returns a Promise that is resolved when the",
          " animation is complete and the element's [`hidden`](#hidden) property",
          " has been set to `false`.",
          "",
          " To learn about the behavior of a shown element,",
          " see the [`hidden`](#hidden) property.",
          "",
          " You can optionally apply one of the following animations when showing the element:",
          "",
          " + `\"ArcIn\"`",
          " + `\"BounceIn\"`",
          " + `\"DropIn\"`",
          " + `\"ExpandIn\"`",
          " + `\"FadeIn\"`",
          " + `\"FlipIn\"`",
          " + `\"FloatIn\"`",
          " + `\"FlyIn\"`",
          " + `\"FoldIn\"`",
          " + `\"GlideIn\"`",
          " + `\"Reveal\"`",
          " + `\"SlideIn\"`",
          " + `\"SpinIn\"`",
          " + `\"TurnIn\"`" ],
        "links":
        [ "[hide( )](#hide)",
          "[hidden](#hidden)",
          "[expand( )]($w.CollapsedMixin.html#expand)" ],
        "examples":
        [ { "title": "Show an element with no animation",
          "body":
          [ "$w(\"#myElement\").show();" ] },
          { "title": "Show an element with the \"FadeIn\" animation",
            "body":
            [ "$w(\"#myElement\").show(\"FadeIn\");" ] },
          { "title": "Show an element with an animation and log message when the animation is done",
            "body":
            [ "$w(\"#myElement\").show(\"FadeIn\")",
              "  .then( ( ) => {",
              "    console.log(\"Done with fade\");",
              "  } );" ] },
          { "title": "Toggle the hidden state of an element",
            "body":
            [ "if( $w(\"#myElement\").hidden ) {",
              "  $w(\"#myElement\").show();",
              "}",
              "else {",
              "  $w(\"#myElement\").hide();",
              "}" ] } ] } } ],
  "callbacks": [],
  "messages": [] }
